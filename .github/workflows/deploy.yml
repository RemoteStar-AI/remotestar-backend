name: Deploy to ECS

on:
  workflow_run:
    workflows: ["Build"]
    types:
      - completed
    branches:
      - main

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [main, staging, demo]  # Deploy to all environments; adjust as needed

    env:
      AWS_REGION: ap-south-1
      ECR_REPO: 162288433251.dkr.ecr.ap-south-1.amazonaws.com/remotestar-backend-${{ matrix.environment }}
      ECS_CLUSTER: remotestar-backend-${{ matrix.environment }}-cluster
      ECS_SERVICE: remotestar-backend-${{ matrix.environment }}-service

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image
        run: |
          docker build -t $ECR_REPO:latest .
          docker push $ECR_REPO:latest

      - name: Force ECS service update
        run: |
          aws ecs update-service \
            --cluster $ECS_CLUSTER \
            --service $ECS_SERVICE \
            --force-new-deployment